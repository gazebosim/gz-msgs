# Copyright 2023 Open Source Robotics Foundation, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# copied from gz-msgs/gz-msgs-extras.cmake

find_package(Python3 REQUIRED COMPONENTS Interpreter)

include(${@PROJECT_NAME@_DIR}/gz_msgs_string_utils.cmake)
include(${@PROJECT_NAME@_DIR}/gz_msgs_protoc.cmake)
include(${@PROJECT_NAME@_DIR}/gz_msgs_factory.cmake)
include(${@PROJECT_NAME@_DIR}/gz_msgs_generate.cmake)
include(${@PROJECT_NAME@_DIR}/target_link_messages.cmake)

set(@PROJECT_NAME@_INSTALL_PATH "${@PROJECT_NAME@_DIR}/@PROJECT_CMAKE_EXTRAS_PATH_TO_PREFIX@")
cmake_path(NORMAL_PATH @PROJECT_NAME@_INSTALL_PATH OUTPUT_VARIABLE @PROJECT_NAME@_INSTALL_PATH)
set(PROTOC_NAME "@PROJECT_NAME@_protoc_plugin")
set(PROTO_SCRIPT_NAME "@PROJECT_NAME@_generate.py")
set(FACTORY_SCRIPT_NAME "@PROJECT_NAME@_generate_factory.py")

set(@PROJECT_NAME@_PROTO_PATH ${@PROJECT_NAME@_INSTALL_PATH}/share/protos)
set(@PROJECT_NAME@_PROTO_GENERATOR_PLUGIN ${@PROJECT_NAME@_INSTALL_PATH}/bin/${PROTOC_NAME})
set(@PROJECT_NAME@_PROTO_GENERATOR_SCRIPT ${@PROJECT_NAME@_INSTALL_PATH}/bin/${PROTO_SCRIPT_NAME})
set(@PROJECT_NAME@_FACTORY_GENERATOR_SCRIPT ${@PROJECT_NAME@_INSTALL_PATH}/bin/${FACTORY_SCRIPT_NAME})

function(gz_msgs_get_installed_messages)
  set(options "")
  set(oneValueArgs MESSAGES_PATH_VARIABLE MESSAGES_PROTOS_VARIABLE)
  set(multiValueArgs DEPENDS)

  cmake_parse_arguments(get_installed_messages "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})

  set(@PROJECT_NAME@_INSTALL_PATH "${@PROJECT_NAME@_DIR}/@PROJECT_CMAKE_EXTRAS_PATH_TO_PREFIX@")
  cmake_path(NORMAL_PATH @PROJECT_NAME@_INSTALL_PATH OUTPUT_VARIABLE @PROJECT_NAME@_INSTALL_PATH)

  set(@PROJECT_NAME@_PROTO_PATH ${@PROJECT_NAME@_INSTALL_PATH}/share/protos)
  file (GLOB protos ${@PROJECT_NAME@_PROTO_PATH}/gz/msgs/*.proto)
  set(${get_installed_messages_MESSAGES_PROTOS_VARIABLE} ${protos} PARENT_SCOPE)
  set(${get_installed_messages_MESSAGES_PATH_VARIABLE} ${@PROJECT_NAME@_PROTO_PATH} PARENT_SCOPE)
endfunction()

function(gz_msgs_generate_messages)
  set(options "")
  set(oneValueArgs MSGS_PATH TARGET PROTO_PACKAGE)
  set(multiValueArgs MSGS_PROTOS DEPENDENCIES)

  cmake_parse_arguments(generate_messages "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})
  gz_msgs_generate_messages_impl(
    MSGS_GEN_SCRIPT
      ${@PROJECT_NAME@_PROTO_GENERATOR_SCRIPT}
    FACTORY_GEN_SCRIPT
      ${@PROJECT_NAME@_FACTORY_GENERATOR_SCRIPT}
    GZ_PROTOC_PLUGIN
      ${@PROJECT_NAME@_PROTO_GENERATOR_PLUGIN}
    INPUT_PROTOS
      ${generate_messages_MSGS_PROTOS}
    PROTO_PACKAGE
      ${generate_messages_PROTO_PACKAGE}
    PROTO_PATH
      ${generate_messages_MSGS_PATH}
    MSGS_LIB
      @PROJECT_NAME@::@PROJECT_NAME@
    DEPENDENCIES
      ${generate_messages_DEPENDENCIES}
    TARGET
      ${generate_messages_TARGET}
  )
endfunction()
